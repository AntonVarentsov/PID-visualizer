# Product Requirements Document (PRD)
## Этап: «Загрузка, распознавание и визуализация corrosion loops на P&ID»

### Цели этапа
Создание пользовательского интерфейса и backend-функциональности для работы инженеров с P&ID-файлами:
- Загрузка нескольких PDF-файлов (P&ID)
- OCR-распознавание и извлечение номеров линий (line numbers)
- Группировка line numbers в corrosion loops
- Визуализация corrosion loops разными цветами на PDF
- Экспорт результатов

### Пользовательские сценарии

**US1:** Создание нового проекта для организации работы с файлами
**US2:** Загрузка нескольких PDF-файлов (P&ID) в проект
**US3:** Просмотр списка загруженных PDF с информацией о страницах
**US4:** Удаление ошибочно загруженных файлов
**US5:** Дозагрузка файлов в существующий проект
**US6:** Автоматическое OCR-распознавание номеров линий
**US7:** Мониторинг статуса распознавания
**US8:** Ручная коррекция ошибок OCR
**US9:** Автоматическая группировка в corrosion loops
**US10:** Ручная корректировка групп loops
**US11:** Назначение и изменение цветов loops
**US12:** Выбор loop и просмотр связанных PDF
**US13:** Визуализация выделенных номеров на PDF
**US14:** Экспорт PDF с цветовой разметкой

### Функциональные требования

#### Backend:
- Управление проектами (создание, список, удаление)
- Загрузка и хранение PDF-файлов по проектам
- OCR-распознавание с использованием EasyOCR
- Парсинг и фильтрация номеров линий по шаблонам
- Группировка в corrosion loops (с заглушкой правил)
- API для управления loops и цветами
- Экспорт PDF с аннотациями

#### Frontend:
- Интерфейс управления проектами
- Drag&Drop загрузка PDF-файлов
- Индикаторы прогресса и статуса
- Редактор OCR-результатов
- Управление corrosion loops с color picker
- PDF-viewer с цветовой подсветкой
- Экспорт функциональность

### База данных
Расширение существующей схемы:
- projects (id, name, created_at)
- documents с project_id
- ocr_results (уже есть)
- line_numbers с loop_id
- corrosion_loops (id, project_id, loop_name, color_hex)

### Технический стек
- Backend: FastAPI (уже настроен), SQLite/SQLAlchemy (уже есть)
- Frontend: React/TypeScript (уже есть), react-pdf-viewer (уже есть)
- OCR: EasyOCR (новое)
- База: расширение существующей PostgreSQL схемы

### Критерии успеха
- Загрузка и распознавание 10 PDF за 5 минут
- Интуитивный UI без обучения
- Быстрая визуализация (2-3 сек на открытие)
- Успешный экспорт размеченных PDF 